name: Release

on:
  push:
    tags:
      - '*'

jobs:
  buildAndPush:
    name: Build image and push to Amazon ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build frontend image
        run: |
          docker build -t web3login-demo-front -f frontend/Dockerfile .
      - name: Tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: web3login-demo-front
        run: |
          IMAGE_TAG=${GITHUB_REF#refs/tags/}
          docker tag web3login-demo-front $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker tag web3login-demo-front $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Build backend image
        run: |
          docker build -t web3login-demo-back -f backend/Dockerfile .
      - name: Tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: web3login-demo-back
        run: |
          IMAGE_TAG=${GITHUB_REF#refs/tags/}
          docker tag web3login-demo-back $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker tag web3login-demo-back $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
